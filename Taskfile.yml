version: '3'

env:
  ENV: dev
  NAME: time-machine-{{.ENV}}

vars:
  SHORT_SHA:
    sh: git rev-parse --short HEAD
  IMAGE_REGISTRY: git.lab.kvd.studio
  IMAGE_REPOSITORY: r/time-machine
  IMAGE_TAG: "{{.IMAGE_REGISTRY}}/{{.IMAGE_REPOSITORY}}:{{.SHORT_SHA}}"

dotenv:
  - deploy/dev/.env

tasks:
  default:
    desc: Build and start containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml up -d --build --remove-orphans {{.CLI_ARGS}}

  setup:
    desc: Run initial setup
    interactive: true
    cmds:
      - poetry install
      - poetry run python -m scripts.make_dotenv dev
      - poetry run python -m scripts.make_dotenvrc dev

  reload-proxy:
    desc: Reload proxy config
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml exec -- proxy nginx -s reload

  psql:
    desc: Access postgres cli
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml exec -- postgres psql -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE

  exec:
    desc: Execute command in specified container
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml  exec -- {{.CLI_ARGS}}

  restart:
    desc: Restart all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml restart {{.CLI_ARGS}}

  logs:
    desc: Show Docker logs
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml logs --follow {{.CLI_ARGS}}

  shutdown:
    desc: Stop all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml stop {{.CLI_ARGS}}

  clean:
    desc: Stop and remove all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml down -v --remove-orphans

  build-and-push:
    desc: Build & push prod Docker image
    cmds:
      - docker build --tag {{.IMAGE_TAG}} --file Dockerfile.prod .
      - docker push {{.IMAGE_TAG}}

  deploy:
    desc: Deploy to prod K8s cluster
    dir: infra/argocd
    cmds:
      - kubectl apply -f application.yaml

version: "3.8"

networks:
  gateway:
    external: true

services:
  backend:
    build:
      context: ../..
      target: dev
      dockerfile: Dockerfile.dev
    image: kvdomingo/time-machine-api:latest
    env_file: .env
    volumes:
      - ../..:/backend
    depends_on:
      - postgres

  frontend:
    image: node:16-alpine
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling
      - WDS_SOCKET_PORT=0
    working_dir: /web
    volumes:
      - ../../web/app:/web
    entrypoint:
      - /bin/sh
      - "-c"
      - "yarn install && exec yarn start"

  proxy:
    image: bitnami/nginx:latest
    environment:
      - NGINX_HTTP_PORT_NUMBER=8000
    volumes:
      - ./proxy:/opt/bitnami/nginx/conf/server_blocks:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.time_machine-dev.rule=Host(`dev.time-machine.localhost`)"
      - "traefik.http.routers.time_machine-dev.entrypoints=http"
      - "traefik.docker.network=gateway"
      - "traefik.http.services.time_machine-dev.loadbalancer.server.port=8000"
    restart: on-failure
    networks:
      - default
      - gateway
    depends_on:
      - backend
      - frontend

  postgres:
    image: bitnami/postgresql:13
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - db-data:/bitnami/postgresql

volumes:
  db-data:

version: '3'

env:
  ENV: prod
  NAME: time-machine-{{.ENV}}

dotenv:
  - deploy/prod/.env

tasks:
  default:
    desc: Build and start containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml up -d --build --remove-orphans {{.CLI_ARGS}}
      - task -t Taskfile.prod.yml logs

  frontend-start:
    desc: Start frontend
    dir: web/app
    cmds:
      - yarn install
      - yarn start

  backend-start:
    desc: Start backend
    cmds:
      - poetry run python manage.py runserver 127.0.0.1:5000

  reload-proxy:
    desc: Reload proxy config
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml exec -- proxy nginx -s reload

  psql:
    desc: Access postgres cli
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml exec -- postgres psql -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE

  exec:
    desc: Execute command in specified container
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml exec -- {{.CLI_ARGS}}

  restart:
    desc: Restart all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml restart {{.CLI_ARGS}}

  logs:
    desc: Show Docker logs
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml logs --follow {{.CLI_ARGS}}

  stop:
    desc: Stop all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml stop {{.CLI_ARGS}}
  
  down:
    desc: Stop and remove all containers
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml down --remove-orphans

  clean:
    desc: Stop and remove all containers, volumes and networks
    cmds:
      - docker compose -p {{.NAME}} -f deploy/{{.ENV}}/docker-compose.yml down --remove-orphans --volumes
